[
  {
    "pageContent": "<path>Overview, Templates, Parameters</path>\n# Overview\nInteractive experiences, like [live scoreboards](./showcase/apps.mdx#livescores), [polls](./showcase/playgrounds.mdx#polls), or [games](./showcase/apps.mdx#bingo), are pretty simple to build.\n## What’s supported\n| Supported |\n|---|\n| Platform | Android, iOS, and web |\n| Surface | Post details page and subreddit feeds |\n| Media | Uploading image files |\n| Post type | One custom post type per project |\n## Templates\nDevvit provides two experience post templates:\n-   `experience-post` to create an experience with blocks.\n-   `experience-post-pro` to create an experience with blocks and a folder structure scaffolding.\nYou can also create your own experience post from scratch.\n### Definitions\nAn experience post requires two definitions:\n-   `addCustomPostType()` defines the experience post type.\n-   `submitPost()` instantiates the post and defines the loading state.\nThe final post is auto-populated from the post template using `submitPost()`.\n### Parameters\nThe `.addCustomPostType(customPostType: CustomPostType)` function contains:\n-   name of the post type\n-   an optional description\n-   render to return the UI for the experience post\n:::note The UI is wrapped in `<blocks>`. If you don’t include them, `<blocks>` will be automatically added. :::\n**Example**\n```ts\nDevvit.addCustomPostType({\n  name: 'My Custom Post Type',\n  description: 'A big hello text.',\n  render: () => {\n    return (\n      <blocks height=\"regular\">\n        <vstack>\n          <text style=\"heading\" size=\"xxlarge\">\n            Hello!\n          </text>\n          <button icon=\"heart\" appearance=\"primary\" />\n        </vstack>\n      </blocks>\n    );\n  },\n});\n```\n:::note Check out our extensive [Icon Library](blocks/icon)! These can be used in `<button>`s or on their own as `<icon>`s. :::\nThe `submitPost(options: SubmitPostOptions)` function has these parameters:",
    "metadata": {
      "type": [
        "heading",
        "text",
        "table",
        "code"
      ],
      "path": [
        "Overview",
        "Templates",
        "Parameters"
      ],
      "level": 1
    }
  },
  {
    "pageContent": "<path>Overview, Templates, Experience creation flow</path>\n-   title for the name of the experience post\n-   subredditName to show where the post will be instantiated\n-   preview to provide a lightweight UI that shows while the post renders\n**Example**\n```ts\nawait reddit.submitPost({\n  title: 'My custom post',\n  subredditName: currentSubreddit.name,\n  preview: (\n    <vstack>\n      <text>Loading...</text>\n    </vstack>\n  ),\n});\n```\n### Experience creation flow\nOnce the experience post has been submitted and instantiated, it needs a place for users to call it for creation. This example uses the subreddit menu.\nThe `.addMenuItem(menuItem: MenuItem)` function has these parameters:\n-   label for the text users will see\n-   location to indicate where the menu item will be\n-   onPress handler, which specifies what happens when the menu item is pressed\n**Example**\n```ts\nDevvit.addMenuItem({\n  location: 'subreddit',\n  label: 'Add a poll',\n  onPress: async (_, context) => {\n    const currentSubreddit = await context.reddit.getCurrentSubreddit();\n    await context.reddit.submitPost({\n      title: 'My custom post',\n      subredditName: currentSubreddit.name,\n      preview: (\n        <vstack>\n          <text>Loading...</text>\n        </vstack>\n      ),\n    });\n    context.ui.showToast(`Submitted custom post to ${currentSubreddit.name}`);\n  },\n});\n```",
    "metadata": {
      "type": [
        "text",
        "code",
        "heading"
      ],
      "path": [
        "Overview",
        "Templates",
        "Experience creation flow"
      ],
      "level": 3
    }
  },
  {
    "pageContent": "<path>Overview, Next steps</path>\n## Next steps\nNow that you know what experience posts can do, you can:\n-   See how easy it is to [build an experience](experience_post.md).\n-   Start iterating with code in real time in the [playground](playground.md)\n-   Find components to help you build your experiences in the [blocks](/docs/blocks/overview.mdx) gallery.",
    "metadata": {
      "type": [
        "heading",
        "text"
      ],
      "level": 2,
      "path": [
        "Overview",
        "Next steps"
      ]
    }
  }
]