[
  {
    "pageContent": "<path>Create a custom post with a form, Prerequisites, Add imports</path>\n# Create a custom post with a form\n## Prerequisites\nRead through our [custom post tutorial](./basic_custom_post.md) to learn what a custom post is and how to create one. We'll use that custom post to make a simple form asking your users how theyâ€™re doing.\n| Custom post | Form |\n|---|---|\n|  |  |\n### Start a project\nTo create a form, use the `custom-post` template to start a new custom post project.\n-   From the terminal, navigate to a directory where you'll store your project.\n-   Enter the following command to create a project folder on your local machine.\n```bash\ndevvit new <replace-with-your-app-name> --template=custom-post\n```\n### Install dependencies\n-   To have your package manager install the dependencies, run the following command in the root of your project:\n```bash\nnpm i\n```\n\\-OR-\n```bash\nyarn install\n```\n### Add imports\n-   Add the following code to the top of your file (you can replace the existing import statement).\n```ts\nimport { Devvit } from '@devvit/public-api';\n```\n-   Configure your app to use the Reddit API. Paste the following code under the import statement:\n```ts\nDevvit.configure({\n  redditAPI: true,\n});\n```",
    "metadata": {
      "type": [
        "heading",
        "text",
        "table",
        "code"
      ],
      "path": [
        "Create a custom post with a form",
        "Prerequisites",
        "Add imports"
      ],
      "level": 1
    }
  },
  {
    "pageContent": "<path>Create a custom post with a form, Create a form</path>\n## Create a form\nCopy and paste the following code snippets into your `main.tsx` file below the import statements (replace the code from the template with this).\n-   Create a custom post component.\n```jsx\nDevvit.addCustomPostType({\n  name: 'My Custom Post Type',\n  render: () => {\n    return (\n      <vstack>\n        <text style=\"heading\" size=\"xxlarge\">\n          Hello!\n        </text>\n      </vstack>\n    );\n  },\n});\n```\n-   Use the Reddit API to say hello to the user.\n```jsx\nimport { Devvit, useState } from '@devvit/public-api';\n\nDevvit.addCustomPostType({\n  name: 'My Custom Post Type',\n  render: (context) => {\n    const [currentUsername] = useState(async () => {\n      const currentUser = await context.reddit.getCurrentUser();\n      return currentUser.username;\n    });\n\n    return (\n      <vstack>\n        <text style=\"heading\" size=\"xxlarge\">\n          Hello! {currentUsername}\n        </text>\n      </vstack>\n    );\n  },\n});\n```\n-   Create a form to collect user input.",
    "metadata": {
      "type": [
        "heading",
        "text",
        "code"
      ],
      "level": 2,
      "path": [
        "Create a custom post with a form",
        "Create a form"
      ]
    }
  },
  {
    "pageContent": "<path>Create a custom post with a form, Create a form</path>\n```tsx\nimport { Devvit, useState, useForm } from '@devvit/public-api';\n\nDevvit.addCustomPostType({\n  name: 'My Custom Post Type',\n  render: (context) => {\n    const [currentUsername] = useState(async () => {\n      const currentUser = await context.reddit.getCurrentUser();\n      return currentUser.username;\n    });\n\n    const [answer, setAnswer] = useState('');\n\n    const howAreYouForm = useForm(\n      {\n        fields: [\n          {\n            name: 'answer',\n            label: 'How are you doing today?',\n            type: 'string',\n            required: true,\n          },\n        ],\n      },\n      async (data) => {\n        context.ui.showToast({\n          text: 'Thanks for answering!',\n          appearance: 'success',\n        });\n        setAnswer(data.answer);\n      }\n    );\n\n    return (\n      <vstack>\n        <text style=\"heading\" size=\"xxlarge\">\n          Hello {currentUsername}\n        </text>\n        <spacer />\n        <hstack gap=\"medium\">\n          <text>How are you doing today?</text>\n          {answer ? (\n            <text>{answer}</text>\n          ) : (\n            <button\n              onPress={() => {\n                context.ui.showForm(howAreYouForm);\n              }}\n            >\n              Answer Question\n            </button>\n          )}\n        </hstack>\n      </vstack>\n    );\n  },\n});\n```",
    "metadata": {
      "type": [
        "code"
      ],
      "level": 2,
      "path": [
        "Create a custom post with a form",
        "Create a form"
      ]
    }
  },
  {
    "pageContent": "<path>Create a custom post with a form, Testing, Next steps</path>\n-   Add a subreddit menu item to submit your custom post.\n```jsx\nDevvit.addMenuItem({\n  location: 'subreddit',\n  label: 'Submit custom post',\n  onPress: async (_, context) => {\n    const currentSubreddit = await context.reddit.getCurrentSubreddit();\n    await context.reddit.submitPost({\n      title: 'My custom post',\n      subredditName: currentSubreddit.name,\n      preview: (\n        <vstack>\n          <text>Loading...</text>\n        </vstack>\n      ),\n    });\n    context.ui.showToast(`Submitted custom post to ${currentSubreddit.name}`);\n  },\n});\n```\n-   Paste this as the last line of your file: All of the code above this line modified the core Devvit object. This line makes the updated Devvit object (which now implements the custom post) available to the Reddit Developer Platform.\n```ts\nexport default Devvit;\n```\n## Testing\nYou can use [playtest](./playtest.md) to test your custom post or install it on a test subreddit.\nTo install to a test subreddit:\n-   Add a custom subreddit menu action that creates a sample post to your code.\n-   Install your app on a test subreddit.\n-   Click on the subreddit menu and create a post.\n### Next steps\nCongratulations on building your interactive form! Next up: add [logging](./debug.md) to your app to help you debug.",
    "metadata": {
      "type": [
        "text",
        "code",
        "heading"
      ],
      "path": [
        "Create a custom post with a form",
        "Testing",
        "Next steps"
      ],
      "level": 2
    }
  }
]