[
  {
    "pageContent": "<path>Webviews, Known limitations</path>\n# Webviews\nWebviews are components that let you display web content directly within your app. This means you can show websites, HTML content, or other web-based resources without needing to leave the app.\n## Known limitations\n-   Your app must be allowlisted by a Reddit administrator before you can use webviews.\n-   Inline CSS or JS is not allowed. All JS and CSS must be contained in separate files and imported via links.\n-   Gesture recognition on mobile does not yet work, as it triggers native gestures in the Reddit app as well. We are working on a fix for this that should be available in November.\n-   Assets are not tied to the app version; when a new version of assets is uploaded (even via playtest) ALL versions of that app will have access to those assets. This can cause problems if you use a single app for both development and production releases. We are working on a fix that should be available in October. In the interim, we recommend creating separate apps for development and production versions of the app.",
    "metadata": {
      "type": [
        "heading",
        "text"
      ],
      "path": [
        "Webviews",
        "Known limitations"
      ],
      "level": 1
    }
  },
  {
    "pageContent": "<path>Webviews, Create an app with webviews</path>\n## Install Devvit Next\nIn order to use webviews, you’ll need to install and use Devvit Next on 0.11.\n```tsx\n\nnpm install -g devvit@next\n```\nIn the following example, you’ll create an app that looks like [this](https://www.reddit.com/r/blockstesting/comments/1dtwjq3/my_devvit_post/) once you install it:\n![Sample webviews post](../assets/webviews_example.png)\n## Create an app with webviews\n-   Create a new app.\n```tsx\n$ devvit new\n\n? Project name: my-webview-app\n? Choose a template:\n > experience-post\n\n$ cd my-webview-app\n```\n-   Upload the first version.\n```tsx\n$ devvit upload\n\n? Pick a name for your app: (my-webview-app)\n? Is the app NSFW? (y/N)\n✨ Visit https://developers.reddit.com/apps/my-webview-app to view your app!\n```\n-   **Ask your Reddit contact to enable webview for your app.**\n    \n-   Create HTML (project/webroot/page.html).\n```tsx\n<!DOCTYPE html>\n<html>\n   <head>\n   <link rel=\"stylesheet\" href=\"style.css\">\n   </head>\n   <body>\n       <h1>Hello, world!</h1>\n       <button id=\"ping\">Ping!</button>\n       <div id=\"log\"></div>\n       <script src=\"page.js\"></script>\n   </body>\n</html>\n```",
    "metadata": {
      "type": [
        "heading",
        "text",
        "code"
      ],
      "path": [
        "Webviews",
        "Create an app with webviews"
      ],
      "level": 2
    }
  },
  {
    "pageContent": "<path>Webviews, Create an app with webviews</path>\n-   Create JS (project/webroot/page.js).\n```tsx\nwindow.onmessage = (ev) => {\n  const log = document.querySelector('#log');\n  const msg = JSON.stringify(ev.data);\n  const pre = document.createElement('pre');\n  pre.innerText = msg;\n  log.appendChild(pre);\n};\n\nwindow.addEventListener('load', () => {\n  window.parent.postMessage({ type: 'webview_ready' }, '*');\n});\n\nfunction sendPing() {\n  window.parent.postMessage(\n    {\n      type: 'ping',\n      data: {\n        time: Date.now(),\n      },\n    },\n    '*'\n  );\n}\n\ndocument.body.querySelector('#ping').onclick = sendPing;\n```\n-   Create CSS (project/webroot/style.css).\n```tsx\nbody {\n    background-color: red;\n}\n```\n-   Update `main.tsx`.\n```tsx\nDevvit.addCustomPostType({\n  name: 'My awesome webview',\n  height: 'regular',\n  render: (context) => {\n    const { useState } = context;\n\n    const [myState, setMyState] = useState({\n      time: Date.now(),\n    });\n\n    const handleMessage = (ev: JSONObject) => {\n      if (ev.type === 'webview_ready') {\n        context.ui.webView.postMessage(myState);\n      } else if (ev.type == 'ping') {\n        setMyState(ev.data);\n        context.ui.webView.postMessage(ev.data);\n      }\n    };\n\n    return (\n      <vstack height=\"100%\" width=\"100%\" gap=\"medium\" alignment=\"center middle\">\n        <webview grow url=\"page.html\" onMessage={handleMessage} />\n      </vstack>\n    );\n  },\n});\n```",
    "metadata": {
      "type": [
        "text",
        "code"
      ],
      "level": 2,
      "path": [
        "Webviews",
        "Create an app with webviews"
      ]
    }
  },
  {
    "pageContent": "<path>Webviews, Create an app with webviews</path>\n-   If webview does not take the full width, use this workaround.\n```tsx\n<webview\n  url=\"page.html\"\n  onMessage={handleMessage}\n  width=”100%”\n  minWidth=”100%”\n/>\n```\n-   Upload your app again.\n```tsx\n$ devvit upload\n\nUploading new webview assets...... New webview assets uploaded.\n```\nYou now have webviews enabled in your app!",
    "metadata": {
      "type": [
        "text",
        "code"
      ],
      "level": 2,
      "path": [
        "Webviews",
        "Create an app with webviews"
      ]
    }
  }
]