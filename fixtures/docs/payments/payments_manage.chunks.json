[
  {
    "pageContent": "<path>Manage payments, Update products</path>\n# Manage payments\nOnce your app and products have been approved, you’re ready to use Reddit’s production payments system. Real payments will be triggered automatically when invoked from approved app versions. No code changes are required.\n## Check orders\nReddit keeps track of historical purchases and lets you query user purchases.\nOrders are returned in reverse chronological order and can be filtered based on user, product, success state, or other attributes.\n**Example**\n```tsx\nimport { useOrders, OrderStatus } from '@devvit/payments';\n\nexport function CosmicSwordShop(context: Devvit.Context): JSX.Element {\n  const { orders } = useOrders(context, {\n    sku: 'cosmic_sword',\n  });\n\n  // if the user hasn’t already bought the cosmic sword\n  // then show them the purchase button\n  if (orders.length > 0) {\n    return <text>Purchased!</text>;\n  } else {\n    return <button onPress={/* Trigger purchase */}>Buy Cosmic Sword</button>;\n  }\n}\n```\n## Update products\nOnce your app is in production, existing installations will need to be manually updated via the admin tool if you release a new version. Contact the Developer Platform team if you need to update your app installation versions.",
    "metadata": {
      "type": [
        "heading",
        "text",
        "code"
      ],
      "path": [
        "Manage payments",
        "Update products"
      ],
      "level": 1
    }
  },
  {
    "pageContent": "<path>Manage payments, Issue a refund</path>\nAutomatic updates will be supported in a future release.\n## Issue a refund\nReddit may reverse transactions under certain circumstances, such as card disputes, policy violations, or technical issues. If there’s a problem with a digital good, a user can submit a request for a refund via [Reddit Help](https://support.reddithelp.com/hc/en-us/requests/new?ticket_form_id=29770197409428).\nWhen a transaction is reversed for any reason, you may optionally revoke product functionality from the user by adding a `refundOrder` handler.\n**Example**\n```tsx\naddPaymentHandler({\n  fulfillOrder: async (order: Order, ctx: Context) => {\n    // Snip order fulfillment\n  },\n  refundOrder: async (order: Order, ctx: Context) => {\n    // check if the order contains an extra life\n    if (order.products.some(({ sku }) => sku === GOD_MODE_SKU)) {\n      // redis key for storing number of lives user has left\n      const livesKey = `${ctx.userId}:lives`;\n\n      // if so, decrement the number of lives\n      await ctx.redis.incrBy(livesKey, -1);\n    }\n  },\n});\n```",
    "metadata": {
      "type": [
        "text",
        "heading",
        "code"
      ],
      "path": [
        "Manage payments",
        "Issue a refund"
      ],
      "level": 2
    }
  },
  {
    "pageContent": "<path>Manage payments, Payments help</path>\n## Payments help\nWhen you enable payments, a **Get Payments Help** menu item is automatically added to the three dot menu in your app. This connects the user to [Reddit Help](https://support.reddithelp.com/hc/en-us/requests/new?ticket_form_id=29770197409428) for assistance.",
    "metadata": {
      "type": [
        "heading",
        "text"
      ],
      "level": 2,
      "path": [
        "Manage payments",
        "Payments help"
      ]
    }
  }
]