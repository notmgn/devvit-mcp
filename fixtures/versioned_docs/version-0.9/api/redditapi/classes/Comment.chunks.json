[
  {
    "pageContent": "<path>Class: Comment, Table of contents, Methods</path>\n# Class: Comment\n## Table of contents\n### Constructors\n-   [constructor](Comment.md#constructor)\n### Accessors\n-   [approved](Comment.md#approved)\n-   [authorName](Comment.md#authorname)\n-   [body](Comment.md#body)\n-   [collapsedBecauseCrowdControl](Comment.md#collapsedbecausecrowdcontrol)\n-   [createdAt](Comment.md#createdat)\n-   [distinguishedBy](Comment.md#distinguishedby)\n-   [edited](Comment.md#edited)\n-   [id](Comment.md#id)\n-   [locked](Comment.md#locked)\n-   [numReports](Comment.md#numreports)\n-   [parentId](Comment.md#parentid)\n-   [postId](Comment.md#postid)\n-   [removed](Comment.md#removed)\n-   [replies](Comment.md#replies)\n-   [score](Comment.md#score)\n-   [spam](Comment.md#spam)\n-   [stickied](Comment.md#stickied)\n### Methods\n-   [approve](Comment.md#approve)\n-   [delete](Comment.md#delete)\n-   [distinguish](Comment.md#distinguish)\n-   [distinguishAsAdmin](Comment.md#distinguishasadmin)\n-   [edit](Comment.md#edit)\n-   [isApproved](Comment.md#isapproved)\n-   [isDistinguished](Comment.md#isdistinguished)\n-   [isEdited](Comment.md#isedited)\n-   [isLocked](Comment.md#islocked)\n-   [isRemoved](Comment.md#isremoved)\n-   [isSpam](Comment.md#isspam)\n-   [isStickied](Comment.md#isstickied)\n-   [lock](Comment.md#lock)\n-   [remove](Comment.md#remove)\n-   [reply](Comment.md#reply)\n-   [toJSON](Comment.md#tojson)\n-   [undistinguish](Comment.md#undistinguish)\n-   [unlock](Comment.md#unlock)\n-   [approve](Comment.md#approve-1)\n-   [delete](Comment.md#delete-1)\n-   [distinguish](Comment.md#distinguish-1)\n-   [edit](Comment.md#edit-1)\n-   [getById](Comment.md#getbyid)\n-   [getComments](Comment.md#getcomments)\n-   [getCommentsByUser](Comment.md#getcommentsbyuser)\n-   [lock](Comment.md#lock-1)\n-   [remove](Comment.md#remove-1)\n-   [submit](Comment.md#submit)\n-   [undistinguish](Comment.md#undistinguish-1)\n-   [unlock](Comment.md#unlock-1)",
    "metadata": {
      "type": [
        "heading",
        "text"
      ],
      "path": [
        "Class: Comment",
        "Table of contents",
        "Methods"
      ],
      "level": 1
    }
  },
  {
    "pageContent": "<path>Class: Comment, Accessors, stickied, Returns</path>\n## Constructors\n### constructor\n• **new Comment**(`data`, `metadata?`)\n#### Parameters\n| Name | Type |\n|---|---|\n| data | RedditObject | Comment |\n| metadata? | Metadata |\n## Accessors\n### approved\n• `get` **approved**(): `boolean`\n#### Returns\n`boolean`\n### authorName\n• `get` **authorName**(): `string`\n#### Returns\n`string`\n### body\n• `get` **body**(): `string`\n#### Returns\n`string`\n### collapsedBecauseCrowdControl\n• `get` **collapsedBecauseCrowdControl**(): `boolean`\n#### Returns\n`boolean`\n### createdAt\n• `get` **createdAt**(): `Date`\n#### Returns\n`Date`\n### distinguishedBy\n• `get` **distinguishedBy**(): `undefined` | `string`\n#### Returns\n`undefined` | `string`\n### edited\n• `get` **edited**(): `boolean`\n#### Returns\n`boolean`\n### id\n• `get` **id**(): \\`t1\\_${string}\\`\n#### Returns\n\\`t1\\_${string}\\`\n### locked\n• `get` **locked**(): `boolean`\n#### Returns\n`boolean`\n### numReports\n• `get` **numReports**(): `number`\n#### Returns\n`number`\n### parentId\n• `get` **parentId**(): \\`t1\\_${string}\\` | \\`t3\\_${string}\\`\n#### Returns\n\\`t1\\_${string}\\` | \\`t3\\_${string}\\`\n### postId\n• `get` **postId**(): \\`t3\\_${string}\\`\n#### Returns\n\\`t3\\_${string}\\`\n### removed\n• `get` **removed**(): `boolean`\n#### Returns\n`boolean`\n### replies\n• `get` **replies**(): [`Listing`](Listing.md)< [`Comment`](Comment.md)\\>\n#### Returns\n[`Listing`](Listing.md)< [`Comment`](Comment.md)\\>\n### score\n• `get` **score**(): `number`\n#### Returns\n`number`\n### spam\n• `get` **spam**(): `boolean`\n#### Returns\n`boolean`\n### stickied\n• `get` **stickied**(): `boolean`\n#### Returns\n`boolean`",
    "metadata": {
      "type": [
        "heading",
        "text",
        "table"
      ],
      "path": [
        "Class: Comment",
        "Accessors",
        "stickied",
        "Returns"
      ],
      "level": 2
    }
  },
  {
    "pageContent": "<path>Class: Comment, Methods, toJSON, Returns</path>\n## Methods\n### approve\n▸ **approve**(): `Promise`< `void`\\>\n#### Returns\n`Promise`< `void`\\>\n### delete\n▸ **delete**(): `Promise`< `void`\\>\n#### Returns\n`Promise`< `void`\\>\n### distinguish\n▸ **distinguish**(`makeSticky?`): `Promise`< `void`\\>\n#### Parameters\n| Name | Type | Default value |\n|---|---|---|\n| makeSticky | boolean | false |\n#### Returns\n`Promise`< `void`\\>\n### distinguishAsAdmin\n▸ **distinguishAsAdmin**(`makeSticky?`): `Promise`< `void`\\>\n#### Parameters\n| Name | Type | Default value |\n|---|---|---|\n| makeSticky | boolean | false |\n#### Returns\n`Promise`< `void`\\>\n### edit\n▸ **edit**(`options`): `Promise`< [`Comment`](Comment.md)\\>\n#### Parameters\n| Name | Type |\n|---|---|\n| options | CommentSubmissionOptions |\n#### Returns\n`Promise`< [`Comment`](Comment.md)\\>\n### isApproved\n▸ **isApproved**(): `boolean`\n#### Returns\n`boolean`\n### isDistinguished\n▸ **isDistinguished**(): `boolean`\n#### Returns\n`boolean`\n### isEdited\n▸ **isEdited**(): `boolean`\n#### Returns\n`boolean`\n### isLocked\n▸ **isLocked**(): `boolean`\n#### Returns\n`boolean`\n### isRemoved\n▸ **isRemoved**(): `boolean`\n#### Returns\n`boolean`\n### isSpam\n▸ **isSpam**(): `boolean`\n#### Returns\n`boolean`\n### isStickied\n▸ **isStickied**(): `boolean`\n#### Returns\n`boolean`\n### lock\n▸ **lock**(): `Promise`< `void`\\>\n#### Returns\n`Promise`< `void`\\>\n### remove\n▸ **remove**(`isSpam?`): `Promise`< `void`\\>\n#### Parameters\n| Name | Type | Default value |\n|---|---|---|\n| isSpam | boolean | false |\n#### Returns\n`Promise`< `void`\\>\n### reply\n▸ **reply**(`options`): `Promise`< [`Comment`](Comment.md)\\>\n#### Parameters\n| Name | Type |\n|---|---|\n| options | CommentSubmissionOptions |\n#### Returns\n`Promise`< [`Comment`](Comment.md)\\>\n### toJSON\n▸ **toJSON**(): `Object`\n#### Returns\n`Object`",
    "metadata": {
      "type": [
        "heading",
        "text",
        "table"
      ],
      "path": [
        "Class: Comment",
        "Methods",
        "toJSON",
        "Returns"
      ],
      "level": 2
    }
  },
  {
    "pageContent": "<path>Class: Comment, Methods</path>\n| Name | Type |\n|---|---|\n| approved | boolean |\n| authorName | string |\n| body | string |\n| collapsedBecauseCrowdControl | boolean |\n| createdAt | Date |\n| distinguishedBy | undefined | string |\n| edited | boolean |\n| id | `t1_${string}` |\n| locked | boolean |\n| numReports | number |\n| parentId | `t1_${string}` | `t3_${string}` |\n| postId | `t3_${string}` |\n| removed | boolean |\n| replies | Listing< Comment> |\n| score | number |\n| spam | boolean |\n| stickied | boolean |\n### undistinguish\n▸ **undistinguish**(): `Promise`< `void`\\>\n#### Returns\n`Promise`< `void`\\>\n### unlock\n▸ **unlock**(): `Promise`< `void`\\>\n#### Returns\n`Promise`< `void`\\>\n### approve\n▸ `Static` **approve**(`id`, `metadata?`): `Promise`< `void`\\>\n#### Parameters\n| Name | Type |\n|---|---|\n| id | `t1_${string}` |\n| metadata? | Metadata |\n#### Returns\n`Promise`< `void`\\>\n### delete\n▸ `Static` **delete**(`id`, `metadata?`): `Promise`< `void`\\>\n#### Parameters\n| Name | Type |\n|---|---|\n| id | `t1_${string}` |\n| metadata? | Metadata |\n#### Returns\n`Promise`< `void`\\>\n### distinguish\n▸ `Static` **distinguish**(`id`, `sticky`, `asAdmin`, `metadata?`): `Promise`< { `distinguishedBy`: `undefined` | `string` = comment.distinguished; `stickied`: `boolean` }>\n#### Parameters\n| Name | Type |\n|---|---|\n| id | `t1_${string}` |\n| sticky | boolean |\n| asAdmin | boolean |\n| metadata? | Metadata |\n#### Returns\n`Promise`< { `distinguishedBy`: `undefined` | `string` = comment.distinguished; `stickied`: `boolean` }>\n### edit\n▸ `Static` **edit**(`options`, `metadata?`): `Promise`< [`Comment`](Comment.md)\\>\n#### Parameters\n| Name | Type |\n|---|---|\n| options | Object |\n| metadata? | Metadata |\n#### Returns\n`Promise`< [`Comment`](Comment.md)\\>\n### getById\n▸ `Static` **getById**(`id`, `metadata?`): `Promise`< [`Comment`](Comment.md)\\>\n#### Parameters\n| Name | Type |\n|---|---|\n| id | `t1_${string}` |\n| metadata? | Metadata |\n#### Returns\n`Promise`< [`Comment`](Comment.md)\\>\n### getComments",
    "metadata": {
      "type": [
        "table",
        "heading",
        "text"
      ],
      "path": [
        "Class: Comment",
        "Methods"
      ],
      "level": 3
    }
  },
  {
    "pageContent": "<path>Class: Comment, Methods, unlock, Returns</path>\n▸ `Static` **getComments**(`options`, `metadata?`): [`Listing`](Listing.md)< [`Comment`](Comment.md)\\>\n#### Parameters\n| Name | Type |\n|---|---|\n| options | GetCommentsOptions |\n| metadata? | Metadata |\n#### Returns\n[`Listing`](Listing.md)< [`Comment`](Comment.md)\\>\n### getCommentsByUser\n▸ `Static` **getCommentsByUser**(`options`, `metadata?`): [`Listing`](Listing.md)< [`Comment`](Comment.md)\\>\n#### Parameters\n| Name | Type |\n|---|---|\n| options | GetCommentsByUserOptions |\n| metadata? | Metadata |\n#### Returns\n[`Listing`](Listing.md)< [`Comment`](Comment.md)\\>\n### lock\n▸ `Static` **lock**(`id`, `metadata?`): `Promise`< `void`\\>\n#### Parameters\n| Name | Type |\n|---|---|\n| id | `t1_${string}` |\n| metadata? | Metadata |\n#### Returns\n`Promise`< `void`\\>\n### remove\n▸ `Static` **remove**(`id`, `isSpam?`, `metadata?`): `Promise`< `void`\\>\n#### Parameters\n| Name | Type | Default value |\n|---|---|---|\n| id | `t1_${string}` | undefined |\n| isSpam | boolean | false |\n| metadata? | Metadata | undefined |\n#### Returns\n`Promise`< `void`\\>\n### submit\n▸ `Static` **submit**(`options`, `metadata?`): `Promise`< [`Comment`](Comment.md)\\>\n#### Parameters\n| Name | Type |\n|---|---|\n| options | Object |\n| metadata? | Metadata |\n#### Returns\n`Promise`< [`Comment`](Comment.md)\\>\n### undistinguish\n▸ `Static` **undistinguish**(`id`, `metadata?`): `Promise`< { `distinguishedBy`: `undefined` | `string` = comment.distinguished; `stickied`: `boolean` }>\n#### Parameters\n| Name | Type |\n|---|---|\n| id | `t1_${string}` |\n| metadata? | Metadata |\n#### Returns\n`Promise`< { `distinguishedBy`: `undefined` | `string` = comment.distinguished; `stickied`: `boolean` }>\n### unlock\n▸ `Static` **unlock**(`id`, `metadata?`): `Promise`< `void`\\>\n#### Parameters\n| Name | Type |\n|---|---|\n| id | `t1_${string}` |\n| metadata? | Metadata |\n#### Returns\n`Promise`< `void`\\>",
    "metadata": {
      "type": [
        "text",
        "heading",
        "table"
      ],
      "path": [
        "Class: Comment",
        "Methods",
        "unlock",
        "Returns"
      ],
      "level": 3
    }
  }
]