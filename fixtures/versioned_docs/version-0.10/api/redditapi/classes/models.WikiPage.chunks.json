[
  {
    "pageContent": "<path>Class: WikiPage, Accessors, subredditName, Returns</path>\n# Class: WikiPage\n[models](../modules/models.md).WikiPage\n## Table of contents\n### Accessors\n-   [content](models.WikiPage.md#content)\n-   [contentHtml](models.WikiPage.md#contentHtml)\n-   [name](models.WikiPage.md#name)\n-   [revisionAuthor](models.WikiPage.md#revisionauthor)\n-   [revisionDate](models.WikiPage.md#revisiondate)\n-   [revisionId](models.WikiPage.md#revisionid)\n-   [revisionReason](models.WikiPage.md#revisionreason)\n-   [subredditName](models.WikiPage.md#subredditname)\n### Methods\n-   [addEditor](models.WikiPage.md#addeditor)\n-   [getRevisions](models.WikiPage.md#getrevisions)\n-   [getSettings](models.WikiPage.md#getsettings)\n-   [removeEditor](models.WikiPage.md#removeeditor)\n-   [revertTo](models.WikiPage.md#revertto)\n-   [toJSON](models.WikiPage.md#tojson)\n-   [update](models.WikiPage.md#update)\n-   [updateSettings](models.WikiPage.md#updatesettings)\n## Accessors\n### content\n• `get` **content**(): `string`\nThe Markdown content of the page.\n#### Returns\n`string`\n### contentHtml\n• `get` **contentHtml**(): `string`\nThe HTML content of the page.\n#### Returns\n`string`\n### name\n• `get` **name**(): `string`\nThe name of the page.\n#### Returns\n`string`\n### revisionAuthor\n• `get` **revisionAuthor**(): [`User`](models.User.md)\nThe author of this revision.\n#### Returns\n[`User`](models.User.md)\n### revisionDate\n• `get` **revisionDate**(): `Date`\nThe date of the revision.\n#### Returns\n`Date`\n### revisionId\n• `get` **revisionId**(): `string`\nThe ID of the revision.\n#### Returns\n`string`\n### revisionReason\n• `get` **revisionReason**(): `string`\nThe reason for the revision.\n#### Returns\n`string`\n### subredditName\n• `get` **subredditName**(): `string`\nThe name of the subreddit the page is in.\n#### Returns\n`string`",
    "metadata": {
      "type": [
        "heading",
        "text"
      ],
      "path": [
        "Class: WikiPage",
        "Accessors",
        "subredditName",
        "Returns"
      ],
      "level": 1
    }
  },
  {
    "pageContent": "<path>Class: WikiPage, Methods, toJSON, Returns</path>\n## Methods\n### addEditor\n▸ **addEditor**(`username`): `Promise`<`void`\\>\nAdd an editor to this page.\n#### Parameters\n| Name | Type |\n|---|---|\n| username | string |\n#### Returns\n`Promise`<`void`\\>\n### getRevisions\n▸ **getRevisions**(`options`): `Promise`<[`Listing`](models.Listing.md)<[`WikiPageRevision`](models.WikiPageRevision.md)\\>>\nGet the revisions for this page.\n#### Parameters\n| Name | Type |\n|---|---|\n| options | Omit<GetPageRevisionsOptions, \"subredditName\" | \"page\"> |\n#### Returns\n`Promise`<[`Listing`](models.Listing.md)<[`WikiPageRevision`](models.WikiPageRevision.md)\\>>\n### getSettings\n▸ **getSettings**(): `Promise`<[`WikiPageSettings`](models.WikiPageSettings.md)\\>\nGet the settings for this page.\n#### Returns\n`Promise`<[`WikiPageSettings`](models.WikiPageSettings.md)\\>\n### removeEditor\n▸ **removeEditor**(`username`): `Promise`<`void`\\>\nRemove an editor from this page.\n#### Parameters\n| Name | Type |\n|---|---|\n| username | string |\n#### Returns\n`Promise`<`void`\\>\n### revertTo\n▸ **revertTo**(`revisionId`): `Promise`<`void`\\>\nRevert this page to a previous revision.\n#### Parameters\n| Name | Type |\n|---|---|\n| revisionId | string |\n#### Returns\n`Promise`<`void`\\>\n### toJSON\n▸ **toJSON**(): `Pick`<[`WikiPage`](models.WikiPage.md), `\"name\"` | `\"subredditName\"` | `\"content\"` | `\"revisionId\"` | `\"revisionDate\"` | `\"revisionReason\"`\\> & { `revisionAuthor`: `Pick`<[`User`](models.User.md), `\"username\"` | `\"id\"` | `\"nsfw\"` | `\"createdAt\"` | `\"linkKarma\"` | `\"commentKarma\"`\\> & { `modPermissionsBySubreddit`: `Record`<`string`, [`ModeratorPermission`](../modules/models.md#moderatorpermission)\\[\\]> } }\n#### Returns",
    "metadata": {
      "type": [
        "heading",
        "text",
        "table"
      ],
      "path": [
        "Class: WikiPage",
        "Methods",
        "toJSON",
        "Returns"
      ],
      "level": 2
    }
  },
  {
    "pageContent": "<path>Class: WikiPage, Methods, updateSettings, Returns</path>\n`Pick`<[`WikiPage`](models.WikiPage.md), `\"name\"` | `\"subredditName\"` | `\"content\"` | `\"revisionId\"` | `\"revisionDate\"` | `\"revisionReason\"`\\> & { `revisionAuthor`: `Pick`<[`User`](models.User.md), `\"username\"` | `\"id\"` | `\"nsfw\"` | `\"createdAt\"` | `\"linkKarma\"` | `\"commentKarma\"`\\> & { `modPermissionsBySubreddit`: `Record`<`string`, [`ModeratorPermission`](../modules/models.md#moderatorpermission)\\[\\]> } }\n### update\n▸ **update**(`content`, `reason?`): `Promise`<[`WikiPage`](models.WikiPage.md)\\>\nUpdate this page.\n#### Parameters\n| Name | Type |\n|---|---|\n| content | string |\n| reason? | string |\n#### Returns\n`Promise`<[`WikiPage`](models.WikiPage.md)\\>\n### updateSettings\n▸ **updateSettings**(`options`): `Promise`<[`WikiPageSettings`](models.WikiPageSettings.md)\\>\nUpdate the settings for this page.\n#### Parameters\n| Name | Type |\n|---|---|\n| options | Omit<UpdatePageSettingsOptions, \"subredditName\" | \"page\"> |\n#### Returns\n`Promise`<[`WikiPageSettings`](models.WikiPageSettings.md)\\>",
    "metadata": {
      "type": [
        "text",
        "heading",
        "table"
      ],
      "path": [
        "Class: WikiPage",
        "Methods",
        "updateSettings",
        "Returns"
      ],
      "level": 3
    }
  }
]