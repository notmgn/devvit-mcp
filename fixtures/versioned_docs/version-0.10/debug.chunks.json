[
  {
    "pageContent": "<path>Logging, Stream logs</path>\n# Logging\nStream log events from your installed app to your command line to enable troubleshooting your app.\n## Create logs\nAny logs sent to `console` will be available via `devvit logs` for installed apps. For example, `console.log()`, `console.info()` and `console.error()` will produce logs with timestamps as expected.\nThe following example creates a basic app that simply creates a single log.\n```typescript\nimport { Context, Devvit } from '@devvit/public-api';\n\nDevvit.addMenuItem({\n  location: 'post',\n  label: 'Create a log!',\n  onPress: (event, context) => {\n    console.log('Action called!');\n    context.ui.showToast(`Successfully logged!`);\n  },\n});\n\nexport default Devvit;\n```\n## Stream logs\nTo stream logs for an installed app, open a terminal and navigate to your project directory and run:\n```bash\n$ devvit logs <my-subreddit>\n```\nYou can also specify the app name to stream logs for from another folder.\n```bash\n$ devvit logs <my-subreddit> <app-name>\n```\nYou should now see logs streaming onto your console:",
    "metadata": {
      "type": [
        "heading",
        "text",
        "code"
      ],
      "path": [
        "Logging",
        "Stream logs"
      ],
      "level": 1
    }
  },
  {
    "pageContent": "<path>Logging, Historical logs</path>\n```bash\n=============================== streaming logs for my-app on my-subreddit ================================\n[DEBUG] Dec 8 15:55:23 Action called!\n[DEBUG] Dec 8 15:55:50 Action called!\n[DEBUG] Dec 8 15:57:29 Action called!\n[DEBUG] Dec 8 15:57:32 Action called!\n```\nTo exit the streaming logger, enter `CTRL + c`.\nCurrently, `console.log` calls will only stream when they are run from the server (not the client).\n:::note\nCustom post apps use a client-side runtime to speed up execution, so `console.log` calls won't always show up in Devvit logs or Devvit playtest commands. However, these calls will show up in other dev tools (like Chrome) when viewing the app during a playtest.\n:::\n## Historical logs\nYou can view historical logs by using the `--since=XX` flag. You can use the following shorthand:\n-   `Xs`: show logs in the past X seconds\n-   `Xm`: show logs in the past X minutes\n-   `Xh`: show logs in the past X hours\n-   `Xd`: show logs in the past X days\n-   `Xw`: show logs in the past X weeks",
    "metadata": {
      "type": [
        "code",
        "text",
        "heading"
      ],
      "path": [
        "Logging",
        "Historical logs"
      ],
      "level": 2
    }
  },
  {
    "pageContent": "<path>Logging, Playtest</path>\nThe following example will show logs from `my-app` on `my-subreddit` in the past day.\n```bash\n$ devvit logs <my-subreddit> --since=1d\n```\nYou will now see historical logs created by your app on this subreddit:\n```bash\n=============================== streaming logs for my-app on my-subreddit ================================\n[DEBUG] Dec 8 15:55:23 Action called!\n[DEBUG] Dec 8 15:55:50 Action called!\n[DEBUG] Dec 8 15:57:29 Action called!\n[DEBUG] Dec 8 15:57:32 Action called!\n```\nTo exit the streaming logger, enter `CTRL + c`.\n## Playtest\nWhile you are running [`playtest`](./playtest.md) in a subreddit, you will also be [streaming logs](#create-logs) from that community in your command line.",
    "metadata": {
      "type": [
        "text",
        "code",
        "heading"
      ],
      "path": [
        "Logging",
        "Playtest"
      ],
      "level": 2
    }
  }
]