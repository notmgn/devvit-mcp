[
  {
    "pageContent": "<path>Using custom posts, Parameters</path>\n# Using custom posts\nWant to know more about custom posts? You’re in the right place. This page will help you understand the technical details that go into making a custom post, including:\n-   Definitions\n-   Parameters\n-   Post creation flow\n## Definitions\nCustom posts need a definition for the post type and the post loading state:\n-   The `addCustomPostType()` method defines the custom post type.\n-   The `submitPost()` method instantiates the post and defines the loading state.\nThe final post is auto-populated from the post template using `submitPost()`.\n## Parameters\nThe `.addCustomPostType(customPostType: CustomPostType)` function has these parameters:\n-   name of the post type\n-   description, which is optional\n-   render to return the UI for the custom post.\n:::note The UI is wrapped in `<blocks>`. If you don’t include them, `<blocks>` will be automatically added. :::\n**Example**\n```tsx\nDevvit.addCustomPostType({\n  name: 'My Custom Post Type',\n  description: 'A big hello text.',\n  render: () => {\n    return (\n      <blocks height=\"regular\">\n        <vstack>\n          <text style=\"heading\" size=\"xxlarge\">\n            Hello!\n          </text>\n          <button icon=\"heart\" appearance=\"primary\" />\n        </vstack>\n      </blocks>\n    );\n  },\n});\n```",
    "metadata": {
      "type": [
        "heading",
        "text",
        "code"
      ],
      "path": [
        "Using custom posts",
        "Parameters"
      ],
      "level": 1
    }
  },
  {
    "pageContent": "<path>Using custom posts, Post creation flow</path>\n:::note Check out our extensive [Icon Library](blocks/icon)! These can be used in `<button>`s or on their own as `<icon>`s. :::\nThe `submitPost(options: SubmitPostOptions)` function has these parameters:\n-   title for the name of the custom post\n-   subredditName to show where the post will be instantiated\n-   preview to provide a lightweight UI that shows while the post renders.\n**Example**\n```tsx\nawait submitPost({\n  title: 'My custom post',\n  subredditName: currentSubreddit.name,\n  preview: (\n    <vstack>\n      <text>Loading...</text>\n    </vstack>\n  ),\n});\n```\n## Post creation flow\nOnce the post can be submitted and instantiated, the post needs a place for users to call it for creation. This example uses the subreddit menu.\nThe `.addMenuItem(menuItem: MenuItem)` function has these parameters:\n-   label for the text users will see\n-   location to indicate where the menu item will be\n-   onPress handler, which specifies what happens when the menu item is pressed\n**Example**\n```tsx\nDevvit.addMenuItem({\n  location: 'subreddit',\n  label: 'Add a poll',\n  onPress: async (_, context) => {\n    const currentSubreddit = await getCurrentSubreddit();\n    await submitPost({\n      title: 'My custom post',\n      subredditName: currentSubreddit.name,\n      preview: (\n        <vstack>\n          <text>Loading...</text>\n        </vstack>\n      ),\n    });\n    context.ui.showToast(`Submitted custom post to ${currentSubreddit.name}`);\n  },\n});\n```",
    "metadata": {
      "type": [
        "text",
        "code",
        "heading"
      ],
      "path": [
        "Using custom posts",
        "Post creation flow"
      ],
      "level": 2
    }
  }
]