[
  {
    "pageContent": "<path>Class: Listing< T>, Methods, setMore, Returns</path>\n# Class: Listing< T>\n## Type parameters\n| Name |\n|---|\n| T |\n## Table of contents\n### Constructors\n-   [constructor](Listing.md#constructor)\n### Properties\n-   [limit](Listing.md#limit)\n-   [pageSize](Listing.md#pagesize)\n### Accessors\n-   [hasMore](Listing.md#hasmore)\n### Methods\n-   [\\[asyncIterator\\]](Listing.md#%5Basynciterator%5D)\n-   [all](Listing.md#all)\n-   [get](Listing.md#get)\n-   [preventInitialFetch](Listing.md#preventinitialfetch)\n-   [setMore](Listing.md#setmore)\n## Constructors\n### constructor\n• **new Listing**< `T`\\>(`options`)\n#### Type parameters\n| Name |\n|---|\n| T |\n#### Parameters\n| Name | Type |\n|---|---|\n| options | ListingOptions< T> |\n## Properties\n### limit\n• **limit**: `number` = `DEFAULT_LIMIT`\n### pageSize\n• **pageSize**: `number` = `DEFAULT_PAGE_SIZE`\n## Accessors\n### hasMore\n• `get` **hasMore**(): `boolean`\n#### Returns\n`boolean`\n## Methods\n### [asyncIterator]\n▸ **\\[asyncIterator\\]**(): `AsyncIterator`< `T`, `any`, `undefined`\\>\n#### Returns\n`AsyncIterator`< `T`, `any`, `undefined`\\>\n### all\n▸ **all**(): `Promise`< `T`\\[\\]>\n#### Returns\n`Promise`< `T`\\[\\]>\n### get\n▸ **get**(`count`): `Promise`< `T`\\[\\]>\n#### Parameters\n| Name | Type |\n|---|---|\n| count | number |\n#### Returns\n`Promise`< `T`\\[\\]>\n### preventInitialFetch\n▸ **preventInitialFetch**(): `void`\n#### Returns\n`void`\n### setMore\n▸ **setMore**(`more`): `void`\n#### Parameters\n| Name | Type |\n|---|---|\n| more | undefined | MoreObject |\n#### Returns\n`void`",
    "metadata": {
      "type": [
        "heading",
        "table",
        "text"
      ],
      "path": [
        "Class: Listing< T>",
        "Methods",
        "setMore",
        "Returns"
      ],
      "level": 1
    }
  }
]