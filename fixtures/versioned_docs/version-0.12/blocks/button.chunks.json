[
  {
    "pageContent": "<path>Button, Attributes, grow, Example</path>\nimport AttributeMinHeight from './attributes/\\_minHeight.md'; import AttributeMaxHeight from './attributes/\\_maxHeight.md'; import AttributeMinWidth from './attributes/\\_minWidth.md'; import AttributeMaxWidth from './attributes/\\_maxWidth.md'; import AttributeGrow from './attributes/\\_grow.md'; import AttributeOnPress from './attributes/\\_onPress.md'; import AttributeWidth from './attributes/\\_width.mdx'; import AttributeHeight from './attributes/\\_height.mdx';\n# Button\nThe `<button>` element creates an interactive button that users can click or tap.\n## Attributes\n### icon\nAdds an icon to the button, specified by its string identifier.\nCan be used with or without a text label.\n![Button with and without icon](../assets/blocks/docs-blocks-button-icon-label.png)\n#### Examples\nAn icon button\n```tsx\n<button icon=\"home\" />\n```\nA button with a an icon and a label\n```tsx\n<button icon=\"home\">Label</button>\n```\nA button with no icon\n```tsx\n<button>Label</button>\n```\n### size\nDetermines the button size. Possible values:\n-   `small`: 32px\n-   `medium`: 40px. The default if the attribute is not used.\n-   `large`: 48px\n![Button sizes](../assets/blocks/docs-blocks-button-sizes.png)\n#### Example\nA small button\n```tsx\n<button size=\"small\">Label</button>\n```\n### appearance\nSets the button style. Possible values:\n-   `primary`\n-   `secondary`: The default if the attribute is not used.\n-   `plain`\n-   `bordered`\n-   `media`\n-   `destructive`\n-   `caution`\n-   `success`\n![Button appearance](../assets/blocks/docs-blocks-button-appearance.png)\n#### Example\nA primary button\n```tsx\n<button appearance=\"primary\">Label</button>\n```\n### disabled\nDisables the button if set to true, preventing interactions.\n![Disabled buttons](../assets/blocks/docs-blocks-button-disabled.png)\n#### Examples\nA disabled button button\n```tsx\n<button disabled>Label</button>\n```\nA disabled button button\n```tsx\n<button disabled={true}>Label</button>\n```\n### grow\n#### Example\nA growing button",
    "metadata": {
      "type": [
        "text",
        "heading",
        "code"
      ],
      "path": [
        "Button",
        "Attributes",
        "grow",
        "Example"
      ],
      "level": 0
    }
  },
  {
    "pageContent": "<path>Button, Examples</path>\n```tsx\n<button grow>Label</button>\n```\n### width\n### minWidth\n### maxWidth\n### height\n### minHeight\n### maxHeight\n## Functions\n### onPress\n#### Examples\n```tsx\n<button onPress={() => console.log('world')}>Hello</button>\n```\n## Notes\n## Examples\nA button that increments a counter\n```tsx\nimport { Devvit, useState } from '@devvit/public-api';\n\nDevvit.addCustomPostType({\n  name: 'Say Hello',\n  render: (context) => {\n    const [votes, setCounter] = useState(0);\n    return (\n      <blocks>\n        <vstack alignment=\"center middle\" height=\"100%\" width=\"100%\">\n          <button icon=\"upvote-outline\" onPress={() => setCounter(votes + 1)}>\n            {votes}\n          </button>\n        </vstack>\n      </blocks>\n    );\n  },\n});\n```",
    "metadata": {
      "type": [
        "code",
        "heading",
        "text"
      ],
      "path": [
        "Button",
        "Examples"
      ],
      "level": 2
    }
  }
]