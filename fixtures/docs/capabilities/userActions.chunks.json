[
  {
    "pageContent": "<path>User Actions, How it works</path>\n# User Actions\n## Overview\nBy default, apps make posts or comments with their associated [app account](../about_devvit#app-accounts). With `userActions` enabled, your app can create posts and comments on behalf of the user and submit user-generated content (UGC). This includes:\n-   Creating posts or comments from the [post UI](../interactive_posts.md)\n-   Creating posts or comments via a [form](forms.md)\n-   Creating posts or comments via a [menu action](./menu-actions.md)\n## Guidelines\nUsers should never be surprised by an app creating content on their behalf. Apps using this feature need to:\n-   **Be transparent.** Inform users and show them the content that will be posted on their behalf.\n-   **Provide user control.** Users must opt in to allow the app to post on their behalf. If opt-in is persistent, you must make it clear on how the user can opt out.\n## How it works\nIf you’re using an unapproved app version (including for a playtest):\n-   `runAs: 'USER'` will operate from the app account unless the app owner takes the action\n-   User actions taken by the app owner will be attributed to the app owner's username.",
    "metadata": {
      "type": [
        "heading",
        "text"
      ],
      "path": [
        "User Actions",
        "How it works"
      ],
      "level": 1
    }
  },
  {
    "pageContent": "<path>User Actions, How it works, Parameters</path>\nAfter you [publish](../publishing.md) your app and it’s approved in app review:\n-   `runAs: 'USER'` will operate on behalf of the user for all users\n:::note Make sure your app follows the guidelines above in order to be approved. :::\n### Usage\nTo enable the `userActions` plugin in your app, set it to `true` in `Devvit.configure()`:\n```tsx\nDevvit.configure({\n  redditAPI: true,\n  userActions: true,\n});\n```\nAfter enabling `userActions`, you can call certain Reddit APIs on behalf of the user by passing in the option `runAs: 'USER'`.\nCurrently, the only APIs that support this option are:\n-   [submitPost()](../api/redditapi/RedditAPIClient/classes/RedditAPIClient.md#submitpost)\n-   [submitComment()](../api/redditapi/RedditAPIClient/classes/RedditAPIClient.md#submitcomment)\nIf the `runAs` option is not specified, then the API will use `runAs: 'APP'` by default.\n:::note Both `redditAPI` and `userActions` must be enabled to call Reddit APIs with `runAs: 'USER'`. :::\n### Parameters\n| Parameters | Description |\n|---|---|\n| runAs | The type of account to perform the action on behalf of, either 'USER' or 'APP'. Defaults to 'APP'. |\n| userGeneratedContent | Represents text or images submitted by the user that may be displayed in the post. When calling submitPost() to create an interactive post with runAs: 'USER', you must specify the option userGeneratedContent. |\nNote: Apps that `submitPost()` with `runAs: 'USER'` require `userGeneratedContent` in order to be approved. This helps Reddit with safety and compliance of user generated content.",
    "metadata": {
      "type": [
        "text",
        "heading",
        "code",
        "table"
      ],
      "path": [
        "User Actions",
        "How it works",
        "Parameters"
      ],
      "level": 2
    }
  },
  {
    "pageContent": "<path>User Actions, Example</path>\n## Example\nThis example app uses a form to prompt the user for their favorite color and then submits a post displaying the user's text input.",
    "metadata": {
      "type": [
        "heading",
        "text"
      ],
      "level": 2,
      "path": [
        "User Actions",
        "Example"
      ]
    }
  },
  {
    "pageContent": "<path>User Actions, Example</path>\n```tsx\nimport { Devvit, useForm, useState } from '@devvit/public-api';\n\nDevvit.configure({\n  redditAPI: true,\n  redis: true,\n  userActions: true,\n});\n\nconst loadingPreview = (\n  <vstack height=\"100%\" width=\"100%\" alignment=\"middle center\">\n    <text size=\"large\">Loading ...</text>\n  </vstack>\n);\n\nDevvit.addMenuItem({\n  label: 'Create favorite color post',\n  location: 'subreddit',\n  onPress: async (_event, context) => {\n    const post = await context.reddit.submitPost({\n      title: `What's your favorite color?`,\n      subredditName: await context.reddit.getCurrentSubredditName(),\n      preview: loadingPreview,\n      runAs: 'APP',\n    });\n    context.ui.showToast('Navigating to post...');\n    context.ui.navigateTo(post);\n  },\n});\n\nDevvit.addCustomPostType({\n  name: 'Favorite color post',\n  render: (context) => {\n    const [favColor, _] = useState(async () => {\n      const currentPostId = context.postId ? context.postId : '';\n      let favColor = 'unknown';\n      if (currentPostId != '') {\n        const maybeFavColor = await context.redis.get(currentPostId);\n        favColor = maybeFavColor ? maybeFavColor : 'unknown';\n      }\n      return favColor;\n    });\n\n    const favColorForm = useForm(\n      {\n        fields: [{ type: 'string', name: 'favColor', label: 'Favorite color' }],\n      },\n      async (values) => {\n        // On FormSubmit, create a Post that displays the User's favorite color text input\n        const submittedFavColor = values.favColor ? values.favColor : 'unknown';\n        const currentUsername = await context.reddit.getCurrentUsername();\n        const currentSubreddit = await context.reddit.getCurrentSubredditName();\n\n        const post = await context.reddit.submitPost({\n          title: `u/${currentUsername}'s favorite color is...`,\n          subredditName: currentSubreddit,\n          preview: loadingPreview,\n          runAs: 'USER',\n          userGeneratedContent: { text: submittedFavColor },\n        });\n```",
    "metadata": {
      "type": [
        "code"
      ],
      "level": 2,
      "path": [
        "User Actions",
        "Example"
      ]
    }
  },
  {
    "pageContent": "<path>User Actions, Example</path>\n```tsx\n        context.redis.set(post.id, submittedFavColor);\n        context.ui.showToast(`Creating post for your favorite color...`);\n        context.ui.navigateTo(post);\n      }\n    );\n\n    if (favColor === 'unknown') {\n      return (\n        <vstack gap=\"medium\" height=\"100%\" alignment=\"middle center\">\n          <button\n            onPress={async () => {\n              context.ui.showForm(favColorForm);\n            }}\n          >\n            What's your favorite color?\n          </button>\n        </vstack>\n      );\n    }\n    return (\n      <vstack gap=\"medium\" height=\"100%\" alignment=\"middle center\">\n        <text weight=\"bold\" size=\"large\">\n          {favColor}\n        </text>\n      </vstack>\n    );\n  },\n});\n\nexport default Devvit;\n```",
    "metadata": {
      "type": [
        "code"
      ],
      "level": 2,
      "path": [
        "User Actions",
        "Example"
      ]
    }
  }
]