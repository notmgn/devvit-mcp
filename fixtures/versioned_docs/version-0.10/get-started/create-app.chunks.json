[
  {
    "pageContent": "<path>Create an app, Project templates</path>\n# Create an app\nLearn how to build an app.\nTo create a new app run the new command.\n```bash\n$ devvit new\n```\nYou will be prompted for a project name. The project name is used as your folder name and must be six or more characters, all lowercase, can't start with numerals and include only a-z, 0-9 or '-'. We recommend [Kebab case](https://developer.mozilla.org/en-US/docs/Glossary/Kebab_case) names.\nCreate your app from scratch or use a [project template](#templates) to start with functioning code examples.\nYou can also pass the project name directly as an attribute.\n```bash\n$ devvit new <project-name>\n```\nYou now have a full directory with your project name. There are several files and folders in this directory. The `src/main.tsx` file contains the main code for your app.\n```text\nmy-project\n├── devvit.yaml\n├── package.json\n├── src\n│   └── main.tsx\n├── tsconfig.json\n```\n## Project templates\nTo create an app based on a project template, use the `--template` flag to create a new project. The following example creates an app based on the `custom-post` template.",
    "metadata": {
      "type": [
        "heading",
        "text",
        "code"
      ],
      "path": [
        "Create an app",
        "Project templates"
      ],
      "level": 1
    }
  },
  {
    "pageContent": "<path>Create an app, Project templates, Templates</path>\n```bash\n$ devvit new --template custom-post\n```\nYou can set the project name and use the template flag at the same time.\n```bash\n$ devvit new --template custom-post <project-name>\n```\n### Templates\n| Template | Description |\n|---|---|\n| app-settings | Scaffolding for setting and retrieving app settings. |\n| custom-post | A custom post template with menu action for instantiating. |\n| empty | The default, boilerplate project template. |\n| forms | Demonstrates how to use forms to solicit user information. |\n| image-uploads | Demonstrates how to upload and use images in apps. |\n| menu-action | Illustrates the different places and configurations you can use on your custom Menu actions. |\n| redis | Demonstrates how to read and persist data in redis between renders. |\n| triggers | Demonstrates how to respond to a trigger. |",
    "metadata": {
      "type": [
        "code",
        "text",
        "heading",
        "table"
      ],
      "path": [
        "Create an app",
        "Project templates",
        "Templates"
      ],
      "level": 2
    }
  }
]